/**
 * * 트리구조 : 노드와 브랜치를 이용해서 사이클을 이루지 않도록 구성한 데이터 구조
 * * 사용용도 : 이진트리 형태의 구조로 탐색 알고리즘 구현을 위해 많이 사용됨
 * @node 트리에서 데이터를 저장하는 기본 요소
 * @rootNode 트리 맨 위에 있는 노드
 * @level 최상위 노드를 0 으로 했을 때 하위 브랜치로 연결된 노드의 깊이를 나타냄
 * @parentNode 어떤 노드의 다음 레벨에 연결된 노드
 * @childNode 어떤 노드의 상위 레벨에 연결된 노드(브랜치로 연결된 노드)
 * @leafNode 자식 노드가 없는 노드
 * @brotherNode 동일한 부모 노드를 가진 노드
 * @depth 트리에서 노드가 가질 수 있는 최대 레벨
 */
